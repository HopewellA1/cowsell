@model List<AgriChoice.Models.Purchase>

@{
    ViewData["Title"] = "My Deliveries";
    string farmAddress = "20 INANDA ROAD,NEWLANDS EAST Ntuzuma 4037";
}

<div class="max-w-6xl mx-auto px-4 py-8">
    <div class="flex flex-col md:flex-row justify-between items-start md:items-center mb-6">
        <h2 class="text-2xl font-bold text-gray-800">My Deliveries</h2>
    </div>

    <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-md mb-6">
        <div class="flex items-center">
            <svg class="h-5 w-5 text-blue-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
            </svg>
            <div>
                <p class="text-sm text-blue-700 font-medium">Farm Location</p>
                <p class="text-sm text-blue-600">@farmAddress</p>
            </div>
        </div>
    </div>

    @if (!Model.Any())
    {
        <div class="bg-white p-8 rounded-lg shadow-md text-center">
            <svg class="h-16 w-16 mx-auto text-gray-400" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4" />
            </svg>
            <p class="mt-4 text-gray-600">No deliveries found.</p>
        </div>
    }
    else
    {
        <div class="space-y-6">
            @foreach (var purchase in Model)
            {
                 <!-- Maps & Directions -->
                        <div class="mt-6">
                            @if (purchase.Delivery?.PickedUp == true)
                            {
                                <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-md">
                                    <div class="flex items-center">
                                        <svg class="h-5 w-5 text-blue-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
                                        </svg>
                                        <p class="text-sm text-blue-700 font-medium">Cows picked up and en route to delivery location</p>
                                    </div>
                                    <button onclick="openGoogleMaps('@purchase.DeliveryAddress')" class="mt-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                        <svg class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                                        </svg>
                                        Start Trip to Delivery Location
                                    </button>
                            <button onclick="openConfirmDropOffModal(@purchase.PurchaseId)" class="mt-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500">
                                <svg class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
                                </svg>
                                Confirm Drop Off
                            </button>
                                </div>


                            }
                            else
                            {
                        <div class="bg-blue-50 border-l-4 border-blue-500 p-4 rounded-md mb-6">
                            <div class="flex items-center">
                                <svg class="h-5 w-5 text-blue-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z" />
                                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z" />
                                </svg>
                                <div>
                                    <p class="text-sm text-blue-700 font-medium">Your Pickup Pin</p>
                                    <p class="text-sm text-blue-600">@purchase.Delivery.PickUpPin</p>
                                </div>
                            </div>
                        </div>
                                <div class="bg-yellow-50 border-l-4 border-yellow-500 p-4 rounded-md">
                                    <div class="flex items-center">
                                        <svg class="h-5 w-5 text-yellow-500 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-3L13.732 4c-.77-1.333-2.694-1.333-3.464 0L3.34 16c-.77 1.333.192 3 1.732 3z" />
                                        </svg>
                                        <p class="text-sm text-yellow-700 font-medium">Action Required: Please pick up the cows at the farm</p>
                                    </div>
                                    <button onclick="openGoogleMaps('@farmAddress')" class="mt-3 inline-flex items-center px-4 py-2 border border-transparent rounded-md shadow-sm text-sm font-medium text-white bg-green-600 hover:bg-green-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-green-500">
                                        <svg class="h-4 w-4 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 20l-5.447-2.724A1 1 0 013 16.382V5.618a1 1 0 011.447-.894L9 7m0 13l6-3m-6 3V7m6 10l4.553 2.276A1 1 0 0021 18.382V7.618a1 1 0 00-.553-.894L15 4m0 13V4" />
                                        </svg>
                                        Get Directions to Farm
                                    </button>
                                </div>
                            }
                            
                        </div>

                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="flex justify-between items-center p-4 bg-gray-50 border-b">
                        <h4 class="text-lg font-semibold text-gray-800">Delivery #@purchase.PurchaseId</h4>
                        <span class="px-3 py-1 rounded-full text-sm font-medium @(purchase.DeliveryStatus.ToString() == "Completed" ? "bg-green-100 text-green-800" : "bg-yellow-100 text-yellow-800")">
                            @purchase.DeliveryStatus
                        </span>
                    </div>

                    <div class="p-5">
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <!-- Delivery Information -->
                            <div>
                                <h5 class="text-md font-semibold text-gray-700 mb-3">Delivery Information</h5>
                                <div class="space-y-2">
                                    <p><span class="font-medium text-gray-600">Address:</span> @purchase.DeliveryAddress</p>
                                    <p><span class="font-medium text-gray-600">Scheduled Date:</span> @(purchase.Delivery?.ScheduledDate.ToString("yyyy-MM-dd") ?? "Not scheduled")</p>
                                    <p>
                                        <span class="font-medium text-gray-600">Payment Status:</span>
                                        <span class="inline-block px-2 py-1 text-xs rounded @(purchase.PaymentStatus.ToString() == "Paid" ? "bg-green-100 text-green-800" : "bg-red-100 text-red-800")">
                                            @purchase.PaymentStatus
                                        </span>
                                    </p>
                                </div>
                            </div>

                            <!-- Customer Details -->
                            <div>
                                <h5 class="text-md font-semibold text-gray-700 mb-3">Customer Details</h5>
                                <div class="space-y-2">
                                   
                                </div>
                            </div>
                        </div>

                        <!-- Cow Details -->
                        <div class="mt-6">
                            <h5 class="text-md font-semibold text-gray-700 mb-3">Cow Details</h5>
                            <div class="overflow-x-auto">
                                <table class="min-w-full divide-y divide-gray-200">
                                    <thead>
                                        <tr class="bg-gray-50">
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">ID</th>
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Name</th>
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Breed</th>
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Age</th>
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Weight (kg)</th>
                                        </tr>
                                    </thead>
                                    <tbody class="bg-white divide-y divide-gray-200">
                                        @{
                                            double totalWeight = 0;
                                            @foreach (var pc in purchase.PurchaseCows)
                                            {
                                                totalWeight += pc.Cow.Weight;
                                                <tr class="hover:bg-gray-50">
                                                    <td class="px-4 py-2">@pc.Cow.CowId</td>
                                                    <td class="px-4 py-2">@pc.Cow.Name</td>
                                                    <td class="px-4 py-2">@pc.Cow.Breed</td>
                                                    <td class="px-4 py-2">@pc.Cow.Age years</td>
                                                    <td class="px-4 py-2">@pc.Cow.Weight kg</td>
                                                </tr>
                                            }
                                        }
                                    </tbody>
                                    <tfoot>
                                        <tr class="bg-gray-50l">
                                            <th colspan="4" class="px-4 py-3 text-right text-xs font-medium text-gray-500 uppercase tracking-wider">Total Weight:</th>
                                            <th class="px-4 py-3 text-left text-xs font-medium text-gray-900">@totalWeight kg</th>
                                        </tr>
                                    </tfoot>
                                </table>
                            </div>
                        </div>

    
                    </div>

                    <div class="bg-gray-50 px-5 py-3 flex flex-col sm:flex-row justify-between text-sm">
                        <span class="text-gray-600 mb-1 sm:mb-0"><span class="font-medium">Purchase Date:</span> @purchase.PurchaseDate.ToString("yyyy-MM-dd")</span>
                        
                    </div>
                </div>
            }
        </div>
    }
</div>

<div id="confirmDropOffModal" class="fixed inset-0 z-10 hidden overflow-y-auto" aria-labelledby="modal-title" role="dialog" aria-modal="true">
    <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
        <div class="fixed inset-0 bg-gray-500 bg-opacity-75 transition-opacity" aria-hidden="true" onclick="closeModal('confirmPickUpModal')"></div>

        <div class="inline-block align-bottom bg-white rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-md sm:w-full">
            <div class="bg-indigo-600 px-4 py-3">
                <h3 class="text-lg font-medium text-white" id="modal-title">Confirm Drop Off</h3>
            </div>
            <div class="bg-white px-4 pt-5 pb-4 sm:p-6">
                <p class="text-sm text-gray-700 mb-4">Enter 4-digit PIN to confirm dropoff:</p>
                <input type="text" id="dropOffPinInput" maxlength="4" pattern="\d{4}" inputmode="numeric"
                       class="w-full border border-gray-300 rounded-md px-4 py-2 text-center text-lg tracking-widest"
                       placeholder="••••" />
            </div>
            <div class="bg-gray-50 px-4 py-3 sm:px-6 sm:flex sm:justify-end">
                <button type="button"
                        onclick="confirmDropOffWithPin()"
                        class="mr-2 inline-flex justify-center rounded-md border border-transparent shadow-sm px-4 py-2 bg-indigo-600 text-base font-medium text-white hover:bg-indigo-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm">
                    Confirm
                </button>
                <button type="button"
                        onclick="closeModal('confirmDropOffModal')"
                        class="inline-flex justify-center rounded-md border border-gray-300 shadow-sm px-4 py-2 bg-white text-base font-medium text-gray-700 hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-indigo-500 sm:text-sm">
                    Cancel
                </button>
            </div>
        </div>
    </div>
</div>

<form method="post">
    @Html.AntiForgeryToken()
</form>

<div id="toast" class="hidden fixed bottom-4 right-4 bg-green-600 text-white px-4 py-2 rounded shadow"></div>

@section Scripts {
    <script>
        let selectedPurchaseId = null;

        function openGoogleMaps(address) {
            const encodedAddress = encodeURIComponent(address);
            const mapsUrl = `https://www.google.com/maps/dir/${encodedAddress}&travelmode=driving`;
            window.open(mapsUrl, '_blank');
        }

        function openConfirmDropOffModal(purchaseId) {
            selectedPurchaseId = purchaseId;
            document.getElementById('confirmDropOffModal').classList.remove('hidden');
        }

        function closeModal(modalId) {
            document.getElementById(modalId).classList.add('hidden');
        }

        function confirmDropOffWithPin() {
            const pin = document.getElementById('dropOffPinInput').value.trim();

            if (!/^\d{4}$/.test(pin)) {
                alert('Please enter a valid 4-digit PIN.');
                return;
            }

            fetch('/Driver/ValidatePin', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify({ pin: pin, purchaseId: selectedPurchaseId })
            })
            .then(response => {
                if (!response.ok) throw new Error('Network error');
                return response.json();
            })
            .then(data => {
                if (data.success) {
                    closeModal('confirmPickUpModal');
                    showToast("Pickup confirmed!");
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showToast('Invalid PIN. Please try again.', true);
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showToast('An error occurred while confirming pickup.', true);
            });
        }

        function showToast(message, isError = false) {
            const toast = document.getElementById("toast");
            toast.textContent = message;
            toast.className = `fixed bottom-4 right-4 px-4 py-2 rounded shadow ${isError ? "bg-red-600" : "bg-green-600"} text-white`;
            toast.classList.remove("hidden");

            setTimeout(() => {
                toast.classList.add("hidden");
            }, 3000);
        }

            function closeModal(modalId) {
            document.getElementById(modalId).classList.add('hidden');
        }
    </script>
}
